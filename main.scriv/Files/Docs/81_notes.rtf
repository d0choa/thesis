{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf370
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\deftab720
\pard\pardeftab720\sa240

\f0\fs24 \cf0 We used a set of 116 fully sequenced organisms previously used in other works
\fs16 \up10 11,26 
\fs24 \up0 to look for orthologs of E. coli proteins and construct the trees based on them. This set does not contain very similar organisms, thus avoiding phylogenetic redundancy. We used the \'91\'91BLAST best bi-directional hit\'92\'92 criterion for detecting the ortholog of a given E. coli protein in each genome, with an E-value cut-off of 1 
\f1 \uc0\u56319 \u56320 
\f0  10
\f1\fs16 \up10 \uc0\u56319 \u56321 
\f0 \up10 5
\fs24 \up0 , and requiring an alignment coverage of 70%. \
All orthologs found for this E. coli protein were aligned with MUSCLE
\fs16 \up10 23 
\fs24 \up0 using the default parameters of this program. Then, a phylogenetic tree was generated from this alignment using the neighbor-joining algorithm implemented in ClustalW,
\fs16 \up10 27 
\fs24 \up0 excluding the gaps for the distance calculation.\
Equivalent trees were generated but using only the positions of the alignment fulfilling the following criteria of predicted accessibility:\
\pard\pardeftab720\sa240

\f1 \cf0 \uc0\u56319 \u56322 
\f0  eRIA0: positions predicted as accessible by PROF with any value of \'91\'91reliability\'92\'92.\

\f1 \uc0\u56319 \u56322 
\f0  eRIA3: positions predicted as accessible with reliability Z 3 (PROF reliability values range from 0 to 9).\

\f1 \uc0\u56319 \u56322 
\f0  pACC2, pACC12 and pACC50: positions with a predicted solvent accessible surface Z 2, 12 and 50 \'c5
\fs16 \up10 2
\fs24 \up0 , respectively.\
Finally, distance matrices containing the pair-wise distances between all orthologs were generated for the original tree (based on the whole length of the protein) as well as for these trees based on (predicted) accessible positions. These distances are calculated by summing the lengths of the branches separating the corresponding leaves. These distance matrices are the input for the mirrortree-based methods described in the next point.\
\
**************\
}